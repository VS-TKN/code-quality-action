name: Code Quality Action
description: An action used to measure a project's code quality

inputs:
  config-file:
    description: "Optionally provide a path to your codeclimate.yml relative to your project"
    required: false
    default: ".codeclimate.yml"
  html-report:
    description: "Should a faster, second, execution occur in order to generate an HTML report"
    required: false
    default: "false"
  info-threshold:
    description: "The number of findings of this severity allowed before the job returns a failure"
    required: false
    default: "10"
  minor-threshold:
    description: "The number of findings of this severity allowed before the job returns a failure"
    required: false
    default: "5"
  major-threshold:
    description: "The number of findings of this severity allowed before the job returns a failure"
    required: false
    default: "1"
  critical-threshold:
    description: "The number of findings of this severity allowed before the job returns a failure"
    required: false
    default: "0"
  blocker-threshold:
    description: "The number of findings of this severity allowed before the job returns a failure"
    required: false
    default: "0"
outputs:
  info-findings:
    description: "The number of findings of severity INFO"
    value: ${{ steps.code-quality.outputs.info }}
  minor-findings:
    description: "The number of findings of severity MINOR"
    value: ${{ steps.code-quality.outputs.minor }}
  major-findings:
    description: "The number of findings of severity MAJOR"
    value: ${{ steps.code-quality.outputs.major }}
  critical-findings:
    description: "The number of findings of severity CRITICAL"
    value: ${{ steps.code-quality.outputs.critical }}
  blocker-findings:
    description: "The number of findings of severity BLOCKER"
    value: ${{ steps.code-quality.outputs.blocker }}

runs:
  using: composite
  steps:
    - name: "Clone default configurations"
      uses: actions/checkout@v4
      with:
        repository: phorus-group/code-quality-test
        path: codequality
        clean: false

    - name: "Configure defaults"
      shell: bash
      run: |
        # Copy default config files unless already present for csslint, eslint (ignore), rubocop and coffeelint
        for config_file in .csslintrc .eslintignore .rubocop.yml coffeelint.json; do
          if [ ! -f "$SOURCE_CODE/$config_file" ] ; then
            echo "Copying default configuration codequality/defaults/$config_file"
            cp "$config_file" .
          fi
        done
        
        # Copy default config file unless already present for eslint
        # NB: check for all supported config files
        if ! [[ -f ".eslintrc.js" || -f ".eslintrc.yaml" || -f ".eslintrc.yml" || -f ".eslintrc.json" || -f ".eslintrc" ]]; then
          cp -rf "codequality/defaults/.eslintrc.yml" .
        fi
        
        # Detect eslint version for using proper channel
        ESLINT_CHANNEL="stable"
        if [ -f "package.json" ] ; then
          ESLINT_VERSION_FROM_PACKAGE_JSON=$(jq -r '[.dependencies.eslint, .devDependencies.eslint] | map(select (. != null)) | first' "$SOURCE_CODE/package.json")
          # Supported notation: ~5.3.0, ^5.3.0, 5.3.0
          ESLINT_MAJOR_VERSION=$(echo "$ESLINT_VERSION_FROM_PACKAGE_JSON" | sed -E 's/^[~^]?([0-9]+).*/\1/')
        
          # codeclimate-eslint has no versions greater than 8 ATM
          # See https://github.com/codeclimate/codeclimate/blob/master/config/engines.yml#L66
          if [ -n "$ESLINT_MAJOR_VERSION" ] && [ "$ESLINT_MAJOR_VERSION" -le 8 ]; then
            ESLINT_CHANNEL="eslint-$ESLINT_MAJOR_VERSION"
          fi
        fi
        
        # Render default config file unless already present for code climate
        # NB: check for all supported config files
        if ! [ -f  ".codeclimate.yml" ] || [ -f ".codeclimate.json" ] ; then
          sed -e "s/__ESLINT_CHANNEL__/\"$ESLINT_CHANNEL\"/" "codeclimate/defaults/.codeclimate.yml.template" > ".codeclimate.yml"
        fi

    - name: "Check files"
      shell: bash
      run: ls -a

    - name: Run Code Climate
      id: code-quality
      uses: phorus-group/codeclimate-standalone@main
      with:
        config_file: ${{ inputs.config-file }}
        html_report: ${{ inputs.html-report }}
        info_threshold:  ${{ inputs.info-threshold }}
        minor_threshold: ${{ inputs.minor-threshold }}
        major_threshold: ${{ inputs.major-threshold }}
        critical_threshold: ${{ inputs.critical-threshold }}
        blocker_threshold: ${{ inputs.blocker-threshold }}

    - name: Report Status Check
      if: always()
      uses: phorus-group/workflow-status-check-action@main
      with:
        state: ${{ steps.code-quality.outcome }}

    - name: "Prepare branch name"
      id: prepare_branch_name
      uses: phorus-group/unslash-text-action@main
      with:
        text: ${{ github.head_ref || github.ref_name }}

    - name: Upload Reports
      uses: actions/upload-artifact@master
      with:
        name: code-climate-reports-${{ steps.prepare_branch_name.outputs.text }}
        path: |
          codeclimate-report.json
          codeclimate-report.html
